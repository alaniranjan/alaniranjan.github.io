{"version":3,"file":"static/js/309.e3a97bef.chunk.js","mappings":"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","sources":["components/Greet/Greet.tsx","components/greetings/Greetings.tsx","components/languageicon/Appicon.tsx","components/skillsline/Skills.tsx","components/WhatIDo/What.tsx","PAGE/HOME/Home.tsx","../node_modules/@chakra-ui/layout/src/simple-grid.tsx","components/socialmedia/social/Social.tsx","components/socialmedia/Socials.tsx"],"sourcesContent":["import { HStack, Spacer, Text, VStack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\ninterface GreetProps {\r\n  title: string;\r\n  nickname: string;\r\n  subTitle: string;\r\n  resumeLink: string;\r\n  portfolio_repository: string;\r\n  githubProfile: string;\r\n}\r\nconst Greet: React.FC<GreetProps> = ({ title, nickname, subTitle}) => {\r\n  return (\r\n    <VStack\r\n      // border={\"1px\"}\r\n      height=\"fit-content\"\r\n      textAlign={{ sm: \"left\", md: \"left\" }}\r\n    >\r\n      {/* 50 */}\r\n      <Text\r\n        fontSize={{ base: \"30px\", sm: \"50px\" }}\r\n        lineHeight={{ base: \"33px\", sm: \"55px\" }}\r\n        w={{ base: \"70%\", sm: \"80%\" }}\r\n        m={\"auto\"}\r\n        mt={{ base: \"50px\" }}\r\n        sx={{\r\n          fontFamily: \"'Open Sans', sans-serif\",\r\n          fontWeight: 700,\r\n\r\n          color: \"thistheme.text\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {title}\r\n      </Text>\r\n\r\n      <Text\r\n        pt={{ base: \"0px\", sm: \"15px\" }}\r\n        w={{ base: \"fit-content\", sm: \"80%\" }}\r\n        m={\"auto\"}\r\n        sx={{\r\n          fontFamily: \"'Open Sans', sans-serif\",\r\n          fontWeight: 400,\r\n          fontSize: \"24px\",\r\n          color: \"thistheme.text\",\r\n          lineHeight: \"20px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <i>&#40; {nickname} &#41;</i>\r\n      </Text>\r\n\r\n      <Text\r\n        w={{ base: \"fit-content\", sm: \"80%\" }}\r\n        m={\"auto\"}\r\n        pt={{ sm: \"20px\", base: \"0px\" }}\r\n        fontSize={{ sm: \"20px\", base: \"16px\" }}\r\n        lineHeight={{ sm: \"35px\", base: \"26px\" }}\r\n        sx={{\r\n          fontFamily: \"'Open Sans', sans-serif\",\r\n          fontWeight: 500,\r\n          color: \"thistheme.describe\",\r\n          width: \"80%\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {subTitle}\r\n      </Text>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Greet;\r\n","import React from \"react\";\r\n// import { Fade } from \"react-reveal\";\r\nimport { greeting } from \"../../portfolio\";\r\nimport Greet from \"../Greet/Greet\";\r\nconst Greetings: React.FC = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"105%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"end\",\r\n        padding: \"auto\"\r\n      }}\r\n    >\r\n      {/* <Fade bottom duration={1000} distance={\"20px\"}> */}\r\n        <Greet {...greeting} />\r\n      {/* </Fade> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Greetings;\r\n","import { Image } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { Tooltip } from '@chakra-ui/react'\r\ntype styleType = {\r\n  color: string\r\n}\r\ninterface AppiconProps {\r\n  skillName: string,\r\n  fontAwesomeClassname: string,\r\n  imgurl: string,\r\n  style: styleType\r\n\r\n}\r\n\r\nconst Appicon: React.FC<AppiconProps> = ({ imgurl, skillName, fontAwesomeClassname, style }) => {\r\n  //   console.log(style);\r\n  return (\r\n    <div >\r\n      <Tooltip  label={skillName}>\r\n        <Image\r\n          width={{base : \"35px\", sm :\"60px\"}}\r\n          margin={\"5px\"}\r\n          sx={{ cursor: \"pointer\" }}\r\n          src={`./imgurl/${imgurl}`}\r\n        />\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appicon;\r\n","import { Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nconst Skills: React.FC<{\r\n  Skills: string\r\n}> = ({ Skills }) => {\r\n  return (\r\n    <Text textAlign={\"left\"} w={{ base: \"90%\", sm: \"100%\" }}\r\n      fontSize={{ base: \"13px\", sm: \"20px\" }}\r\n      sx={{\r\n        fontFamily: 'Open Sans',\r\n        color: \"thistheme.describe\",\r\n        fontWeight: 400,\r\n      } }>{Skills}</Text >\r\n  )\r\n}\r\n\r\nexport default Skills","import { Flex, Grid, GridItem, Heading, Image, Tooltip, VStack } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport Appicon from '../languageicon/Appicon'\r\nimport Skills from '../skillsline/Skills'\r\nimport Reveal from 'react-awesome-reveal'\r\nimport { keyframes } from '@emotion/react'\r\n\r\ntype styleType = {\r\n  color: string\r\n}\r\n\r\ntype softwareType = {\r\n  skillName: string,\r\n  fontAwesomeClassname: string,\r\n  imgurl: string,\r\n  style: styleType\r\n}\r\ninterface WhatProps {\r\n  img: string,\r\n  title: string,\r\n  fileName: string,\r\n  skills: string[],\r\n  softwareSkills: softwareType[]\r\n  even?: boolean\r\n}\r\n\r\nconst LeftWard = keyframes`\r\nfrom {\r\n  opacity: 0;\r\n  transform: translateX(-200px);\r\n}\r\n\r\nto {\r\n  opacity: 1;\r\n  transform: translateX(0px);\r\n}\r\n`\r\nconst RightWard = keyframes`\r\nfrom {\r\n  opacity: 0;\r\n  transform: translateX(200px);\r\n}\r\n\r\nto {\r\n  opacity: 1;\r\n  transform: translateX(0px);\r\n}\r\n`\r\nconst What: React.FC<WhatProps> = ({ even, img, title, fileName, skills, softwareSkills }) => {\r\n\r\n  return (\r\n    <Grid\r\n      w={{\r\n        base: \"100%\",\r\n        sm: \"90%\",\r\n        md: \"800px\",\r\n        lg: \"1000px\",\r\n        xl: \"1100px\",\r\n        \"2xl\": \"1400px\",\r\n      }}\r\n\r\n      gridTemplateColumns={{ base: 'repeat(1,1fr)', sm: 'repeat(2,1fr)' }}\r\n      gridTemplateRows={{ base: 'repeat(2,1fr)', sm: 'repeat(2,1fr)' }}\r\n      gridTemplateAreas={{\r\n        base: `\"info\" \"image\"`,\r\n        sm: even ? ` \"info image\" \"info image\"   ` : ` \"image info\" \"image info\"   `\r\n      }}\r\n\r\n    >\r\n      <GridItem area={\"image\"}\r\n        width={{ base: \"100%\", sm: \"100%\" }}\r\n        height={\"fit-content\"}\r\n        alignItems={\"center\"}\r\n        display={\"flex\"} justifyContent={\"center\"}\r\n      >\r\n        {/* <Fade left duration={1500}> */}\r\n        <Reveal duration={2000} keyframes={even ? RightWard : LeftWard}>\r\n          <Tooltip label={title}>\r\n            <Image margin={\"auto\"} src={`./images/${img}`} width={{ base: \"85%\", sm: \"75%\" }} />\r\n          </Tooltip>\r\n        </Reveal>\r\n      </GridItem>\r\n      <GridItem area={\"info\"}\r\n      >\r\n        {/* <Fade right duration={1000}> */}\r\n        <Reveal duration={1000} keyframes={even ? LeftWard : RightWard}>\r\n          <Heading\r\n            w={{ base: \"92%\", sm: \"92%\" }}\r\n            m={\"auto\"}\r\n            fontSize={{ base: \"30px\", sm: \"40px\" }}\r\n            sx={{\r\n              fontFamily: 'open sans',\r\n              fontWeight: 500,\r\n              color: \"thistheme.text\"\r\n\r\n            }}>\r\n            {title}\r\n          </Heading>\r\n        </Reveal>\r\n        {/* </Fade> */}\r\n        {/* <Fade right duration={1500}> */}\r\n        <Reveal duration={1500} keyframes={even ? LeftWard : RightWard}>\r\n          <Flex flexWrap={'wrap'} mt={{ base: \"0px\", sm: \"20px\" }} align={\"center\"} justifyContent={\"center\"} >\r\n            {\r\n              softwareSkills.map((item, i) => {\r\n                return <Appicon key={i} {...item} />\r\n              })\r\n            }\r\n          </Flex>\r\n        </Reveal>\r\n        {/* </Fade> */}\r\n        {/* <Fade right duration={2000}> */}\r\n        <Reveal duration={2000} keyframes={even ? LeftWard : RightWard}>\r\n          <VStack>\r\n            {\r\n              skills.map((item, i) => {\r\n                return <Skills key={i} Skills={item} />\r\n              })\r\n            }\r\n          </VStack>\r\n        </Reveal>\r\n        {/* </Fade> */}\r\n      </GridItem>\r\n    </Grid >\r\n  )\r\n}\r\n\r\nexport default What","import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  Img,\r\n  Stack,\r\n  Tooltip,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport Greetings from \"../../components/greetings/Greetings\";\r\nimport Socials from \"../../components/socialmedia/Socials\";\r\nimport What from \"../../components/WhatIDo/What\";\r\nimport { seo, skills } from \"../../portfolio\";\r\n\r\nimport Reveal from \"react-awesome-reveal\";\r\nimport { keyframes } from \"@emotion/react\";\r\n\r\n\r\nconst Upwards = keyframes`\r\nfrom {\r\n  opacity: 0;\r\n  transform: translateY(50px);\r\n}\r\n\r\nto {\r\n  opacity: 1;\r\n  transform: translateY(0px);\r\n}\r\n`\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <Box>\r\n      <Reveal duration={2000} keyframes={Upwards}>\r\n        <Grid\r\n          id={\"Home\"}\r\n          height={{ base: \"800px\", sm: \"600px\" }}\r\n          w={{\r\n            base: \"100%\",\r\n            sm: \"90%\",\r\n            md: \"800px\",\r\n            lg: \"1000px\",\r\n            xl: \"1100px\",\r\n            \"2xl\": \"1400px\",\r\n          }}\r\n          templateRows={{ base: \"repeat(3, 1fr)\", sm: \"repeat(1, 1fr)\" }}\r\n          templateColumns={{ base: \"repeat(1, 1fr)\", sm: \"repeat(2, 1fr)\" }}\r\n          gridTemplateAreas={{\r\n            base: `\"greet\"\r\n                  \"Social\"\r\n                  \"Image\"\r\n          `,\r\n            sm: `    \" greet Image\" \r\n                    \" Social Image\"\r\n           `,\r\n          }}\r\n          m={\"auto\"}\r\n        // border={\"1px\"}\r\n        >\r\n          <GridItem area={\"greet\"} h={{ sm: \"450px\" }}>\r\n            <Greetings />\r\n          </GridItem>\r\n          <GridItem area={\"Image\"} h={{ sm: \"600px\", base: \"500px\" }}>\r\n            {/* <Fade distance=\"20px\" duration={1000} bottom> */}\r\n            <br />\r\n            <Tooltip label={\"Feeling Proud\"}>\r\n              <Img\r\n                w={{ base: \"80%\", sm: \"100%\" }}\r\n                m={\"auto\"}\r\n                mt={\"40px\"}\r\n                src={`./images/greetings.png`}\r\n                alt={`./images/greetings.png`}\r\n              />\r\n            </Tooltip>\r\n            {/* </Fade> */}\r\n          </GridItem>\r\n          <GridItem\r\n            area={\"Social\"}\r\n            // border={\"1px\"}\r\n            h={\"150px\"}\r\n          >\r\n            {/* <Fade distance={\"20px\"} duration={1000} bottom> */}\r\n            <Socials />\r\n            <Button\r\n              mt={\"20px\"}\r\n              bg={\"thistheme.text\"}\r\n              color={\"#c5d3e1\"}\r\n              className={\"gitbun\"}\r\n              transition=\"1s\"\r\n              variant={\"outline\"}\r\n              colorScheme={\"thistheme.text\"}\r\n            >\r\n              <a href={seo.og.url} rel=\"noreferrer\" target={\"_blank\"}>\r\n                ⭐ Star Me On Github\r\n              </a>\r\n            </Button>\r\n            {/* </Fade> */}\r\n          </GridItem>\r\n        </Grid>\r\n\r\n      </Reveal>\r\n\r\n      <VStack mt={{ base: \"1rem\", sm: \"200px\" }}>\r\n        <Reveal duration={2000} keyframes={Upwards}>\r\n          <Heading\r\n            mb={{ sm: \"80px\", base: \"40px\" }}\r\n            sx={{\r\n              fontFamily: \"'Open Sans', sans-serif\",\r\n              fontWeight: 600,\r\n              fontSize: \"45px\",\r\n            }}\r\n            color={\"thistheme.text\"}\r\n          >\r\n            What I do?\r\n          </Heading>\r\n        </Reveal>\r\n        <Stack gap={\"2rem\"}>\r\n            <What {...skills.data[0]} />\r\n            <What {...skills.data[1]} even={true} />\r\n            <What {...skills.data[2]} />\r\n       </Stack>\r\n      </VStack>\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n","import { Box, Image } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\ninterface SocialProps {\r\n  name: string,\r\n  link: string,\r\n  fontAwesomeIcon: string,\r\n  backgroundColor: string\r\n}\r\n\r\nconst Social: React.FC<SocialProps> = ({ name, link, fontAwesomeIcon, backgroundColor }) => {\r\n  return (\r\n    <Box\r\n      w={\"41px\"}\r\n      h={\"41px\"}\r\n      backgroundColor={backgroundColor}\r\n      borderRadius={\"50%\"}\r\n      m={\"auto\"}\r\n      display={\"flex\"}\r\n      justifyContent={\"center\"}\r\n      alignItems={\"center\"}\r\n    >\r\n      <Image width={\"80%\"} src={`/images/${fontAwesomeIcon}`} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Social;\r\n","import React from \"react\";\r\nimport { SimpleGrid } from \"@chakra-ui/react\";\r\nimport { socialMediaLinks } from \"../../portfolio\";\r\nimport Social from \"./social/Social\";\r\nimport \"./this.css\";\r\nconst Socials: React.FC = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <SimpleGrid\r\n        minChildWidth=\"41px\"\r\n        w={{ base: \"80%\" }}\r\n        m={\"auto\"}\r\n        mt={\"20px\"}\r\n        spacing=\"15px\"\r\n        display={\"flex\"}\r\n        flexWrap={\"wrap\"}\r\n        alignContent={\"center\"}\r\n        mb={\"20px\"}\r\n        justifyContent={\"center\"}\r\n      >\r\n        {socialMediaLinks.map((item, i) => {\r\n          if(!item.active) return null;\r\n          return (\r\n            <a key={i} href={item.link} rel=\"noreferrer\" target={\"_blank\"}>\r\n              {\" \"}\r\n              <Social {...item} />\r\n            </a>\r\n          );\r\n        })}\r\n      </SimpleGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n"],"names":["Greet","title","nickname","subTitle","_jsxs","VStack","height","textAlign","sm","md","children","Text","fontSize","base","lineHeight","w","m","mt","sx","fontFamily","fontWeight","color","pt","width","Greetings","_jsx","style","display","alignItems","padding","greeting","Appicon","imgurl","skillName","fontAwesomeClassname","Tooltip","label","Image","margin","cursor","src","Skills","LeftWard","keyframes","RightWard","What","even","img","fileName","skills","softwareSkills","Grid","lg","xl","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","GridItem","area","justifyContent","Reveal","duration","Heading","Flex","flexWrap","align","map","item","i","Upwards","Home","Box","id","templateRows","templateColumns","h","Img","alt","Socials","Button","bg","className","transition","variant","colorScheme","href","seo","og","url","rel","target","mb","Stack","gap","data","SimpleGrid","forwardRef","props","ref","columns","spacingX","spacingY","spacing","minChildWidth","rest","theme","useTheme","mapResponsive","value","_value","getToken","n","widthToColumns","count","jsx","columnGap","rowGap","displayName","Social","name","link","fontAwesomeIcon","backgroundColor","borderRadius","flexDirection","alignContent","socialMediaLinks","active"],"sourceRoot":""}