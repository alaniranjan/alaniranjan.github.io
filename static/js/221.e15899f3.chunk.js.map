{"version":3,"file":"static/js/221.e15899f3.chunk.js","mappings":"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","sources":["components/certificates/Certificate.tsx","components/Degree/Degree.tsx","../node_modules/@chakra-ui/layout/src/link.tsx","components/CompetitiveSites/CompetitiveSites.tsx","PAGE/EDUCATION/Education.tsx","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx","../node_modules/@chakra-ui/layout/src/spacer.tsx"],"sourcesContent":["import { Box, Flex, Image, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\ninterface certificateProps {\r\n  title: string;\r\n  subtitle: string;\r\n  logo_path: string;\r\n  certificate_link: string;\r\n  alt_name: string;\r\n  color_code: string;\r\n}\r\nconst Certificate: React.FC<certificateProps> = ({\r\n  title,\r\n  subtitle,\r\n  logo_path,\r\n  certificate_link,\r\n  alt_name,\r\n  color_code,\r\n}) => {\r\n  return (\r\n    <Flex\r\n    onClick={()=> window.open(certificate_link, \"_blank\")}\r\n      flexWrap={\"wrap\"}\r\n      // gap={\"20px\"}\r\n      mt={{ base: \"30px\", sm: \"30px\" }}\r\n      w={{ base: \"100%\", sm: \"290px\" }}\r\n      height={\"290px\"}\r\n      // border={\"1px\"}\r\n      boxShadow={\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"}\r\n      m={\"auto\"}\r\n      flexDir={\"row\"}\r\n    >\r\n      <Box bg={\"white\"} height={\"68%\"} w={\"100%\"}>\r\n        <Image w={\"100%\"} h={\"100%\"} src={`./images/${logo_path}`} />\r\n      </Box>\r\n      <Flex\r\n        h={\"32%\"}\r\n        alignItems={\"center\"}\r\n        justifyContent={\"center\"}\r\n        w={\"100%\"}\r\n      >\r\n        {\" \"}\r\n        <Text\r\n          fontSize={{ sm: \"20px\" }}\r\n          w={\"90%\"}\r\n          sx={{\r\n            fontFamily: \"Open Sans\",\r\n            fontWeight: 700,\r\n\r\n            color: \"thistheme.text\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>{\" \"}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Certificate;\r\n","import { Box, Button, Grid, GridItem, HStack, Image, Spacer, Text, VStack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { keyframes } from \"@emotion/react\";\r\nimport Reveal, { Flip } from \"react-awesome-reveal\";\r\ninterface degreeProps {\r\n  title: string,\r\n  subtitle: string,\r\n  logo_path: string,\r\n  alt_name: string,\r\n  duration: string,\r\n  descriptions: string[],\r\n  website_link: string,\r\n}\r\n\r\nconst RightWard = keyframes`\r\n\r\n`\r\n\r\nconst Degree: React.FC<degreeProps> = ({\r\n  title,\r\n  subtitle,\r\n  logo_path,\r\n  alt_name,\r\n  duration,\r\n  descriptions,\r\n  website_link,\r\n}) => {\r\n  return (\r\n    <>\r\n      <HStack\r\n        w={{\r\n          base: \"100%\",\r\n          sm: \"90%\",\r\n          md: \"700px\",\r\n          lg: \"900px\",\r\n          xl: \"900px\",\r\n          \"2xl\": \"1000px\",\r\n        }}\r\n        m={\"auto\"}\r\n        p={\"20px\"}\r\n        gap={{ base: \"40px\", sm: \"0px\" }}\r\n        mt={{ base: \"60px\" }}\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n        flexDirection={{\r\n          base: \"column\",\r\n          sm: \"row\"\r\n        }}\r\n      >\r\n        <Box width={{\r\n          base: \"90% \",\r\n          sm: \"20% \",\r\n        }}\r\n\r\n        >\r\n          <Flip duration={2000}>\r\n            <Image\r\n              m={{ base: \"auto\", sm: 0 }}\r\n              src={`./images/${logo_path}`}\r\n              boxShadow={\r\n                \"rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px\"\r\n              }\r\n              bg={\"#f8c313\"}\r\n              width={{ base: \"35%\", sm: \"175px\" }}\r\n              borderRadius={\"20px\"}\r\n            />\r\n          </Flip>\r\n        </Box>\r\n        <Box height={{ sm: \"200px\", border: \"1px solid red\" }}\r\n          w={{ base: \"90%\", sm: \"80%\" }}\r\n        >\r\n          <Reveal duration={2000} keyframes={RightWard}>\r\n            <VStack\r\n              borderRadius={\"5px\"}\r\n              overflow={\"hidden\"}\r\n              // border={\"1px\"}\r\n              w={\"100%\"}\r\n              boxShadow={\"rgba(0, 0, 0, 0.55) 0px  0px 15px\"}\r\n              h={\"100%\"}\r\n            >\r\n              <Grid\r\n                w={\"100%\"}\r\n                p={\"10px\"}\r\n                gridTemplateColumns={{\r\n                  base: 'repeat(1,1fr)',\r\n                  sm: 'repeat(3,1fr)'\r\n                }}\r\n                gridTemplateRows={{\r\n                  base: 'repeat(3,1fr)',\r\n                  sm: 'repeat(2,1fr)'\r\n                }}\r\n                gridTemplateAreas={{\r\n                  base: ` \"title \" \"subtitle\" \"duration\"  `,\r\n                  sm: `  \"title title duration\" \"subtitle subtitle subtitle\"`\r\n                }}\r\n                bg={\"#84b7d5\"}\r\n              >\r\n                <GridItem area={\"title\"}>\r\n                  <Text\r\n                    fontSize={{ base: \"18px\", sm: \"22px\" }}\r\n                    sx={{\r\n                      fontFamily: \"Open Sans\",\r\n                      fontWeight: 700,\r\n                      color: \"thistheme.text\",\r\n                    }}\r\n                    textAlign={\"left\"}\r\n                  >\r\n                    {\" \"}\r\n                    {title}\r\n                  </Text>\r\n                </GridItem>\r\n                <GridItem area={\"subtitle\"}>\r\n                  <Text\r\n                    fontSize={{ base: \"16px\", sm: \"18px\" }}\r\n                    sx={{\r\n                      fontFamily: \"Open Sans\",\r\n                      fontWeight: 700,\r\n                      color: \"thistheme.text\",\r\n                    }}\r\n                    textAlign={\"left\"}\r\n                  >\r\n                    {\" \"}\r\n                    {subtitle}\r\n                  </Text>\r\n                </GridItem>\r\n                <GridItem area={\"duration\"}>\r\n                  <Text\r\n                    fontSize={{ base: \"20px\", sm: \"16px\" }}\r\n                    textAlign={\"right\"}\r\n                    sx={{\r\n                      fontFamily: \"Open Sans\",\r\n                      fontWeight: 700,\r\n                      color: \"thistheme.text\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {duration}\r\n                  </Text>\r\n                </GridItem>\r\n              </Grid>\r\n\r\n\r\n              {descriptions.map((item, i) => {\r\n                return <Text key={i} w={\"100%\"} textAlign={\"left\"}>\r\n                  {item}\r\n\r\n                </Text>\r\n              })}\r\n              <Spacer />\r\n              <Button onClick={() => window.open(website_link, \"_blank\")} alignSelf={\"left\"} bg={\"#84b7d5\"} size='md'>\r\n                Visit Website\r\n              </Button>\r\n              <Spacer />\r\n            </VStack>\r\n          </Reveal>\r\n\r\n        </Box>\r\n      </HStack>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Degree;","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n","import React from \"react\";\r\nimport {\r\n  Link,\r\n  Tooltip,\r\n  Img,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\n\r\ninterface Logo {\r\n  siteName: string;\r\n  profileLink: string;\r\n  iconifyClassname: string;\r\n  style: React.CSSProperties;\r\n}\r\n\r\ninterface Props {\r\n  logos: Logo[];\r\n}\r\n\r\nconst CompetitiveSites: React.FC<Props> = ({ logos }) => {\r\n  return (\r\n    <Stack flexDirection={\"row\"} alignItems={\"center\"} justifyContent={\"center\"}>\r\n        {logos.map((logo) => (\r\n          <Tooltip key={logo.siteName} label={logo.siteName} placement=\"top\">\r\n              <Link href={logo.profileLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Img\r\n               width={\"60px\"}\r\n               margin={\"5px\"}\r\n               alt={`./imgurl/${logo.iconifyClassname}`}\r\n               sx={{ cursor: \"pointer\" }}     \r\n              src={`./imgurl/${logo.iconifyClassname}`}\r\n            />\r\n              </Link>\r\n          </Tooltip>\r\n        ))}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CompetitiveSites;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Grid,\r\n  GridItem,\r\n  Text,\r\n  Heading,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { certifications, competitiveSites, degrees } from \"../../portfolio\";\r\n// import Degree from \"../../components/Degree/Degree\";\r\nimport Certificate from \"../../components/certificates/Certificate\";\r\nimport Degree from \"../../components/Degree/Degree\";\r\nimport CompetitiveSites from \"../../components/CompetitiveSites/CompetitiveSites\";\r\nimport Reveal from \"react-awesome-reveal\";\r\nimport { keyframes } from \"@emotion/react\";\r\nimport { appTheme } from \"../../components/theme/theme\";\r\n\r\nconst Upwards = keyframes`\r\nfrom {\r\n  opacity: 0;\r\n  transform: translateY(50px);\r\n}\r\n\r\nto {\r\n  opacity: 1;\r\n  transform: translateY(0px);\r\n}\r\n`\r\nconst Education: React.FC = () => {\r\n  return (\r\n    <div id=\"Education\">\r\n      <Reveal duration={2000} keyframes={Upwards}>\r\n        <Grid\r\n          w={{\r\n            base: \"100%\",\r\n            sm: \"90%\",\r\n            md: \"800px\",\r\n            lg: \"1000px\",\r\n            xl: \"1100px\",\r\n            \"2xl\": \"1350px\",\r\n          }}\r\n          m={\"auto\"}\r\n          gridTemplateAreas={{\r\n            base: `  \"education\" \"text\" `,\r\n            sm: ` \"education text\" \"education text\" `,\r\n          }}\r\n          gridTemplateColumns={{ base: \"repeat(1,1fr)\", sm: \"repeat(2, 1fr)\" }}\r\n          gridTemplateRows={{ base: \"repeat(1,1fr)\", sm: \"repeat(2, 1fr)\" }}\r\n        >\r\n          <GridItem area={\"education\"} display={\"flex\"}>\r\n            <Image\r\n              w={{ base: \"80%\", sm: \"100%\" }}\r\n              m={\"40px\"}\r\n              src={\"./images/eduation.png\"}\r\n            />\r\n          </GridItem>\r\n\r\n          <GridItem\r\n            area={\"text\"}\r\n            display={\"flex\"}\r\n            justifyContent={\"center\"}\r\n            pt={{ sm: \"100px\" }}\r\n            alignItems={\"flex-start\"}\r\n          >\r\n            <Box>\r\n              <Text\r\n                height={\"fit-content\"}\r\n                fontSize={{ base: \"30px\", sm: \"50px\" }}\r\n                fontWeight={{ base: 600, sm: 600 }}\r\n                sx={{\r\n                  fontFamily: \"Open Sans\",\r\n                  color: \"thistheme.text\",\r\n                }}\r\n              >\r\n                Education\r\n              </Text>\r\n              <Text\r\n                fontSize={{ base: \"20px\", sm: \"25px\" }}\r\n                fontWeight={{ base: 400, sm: 600 }}\r\n                sx={{\r\n                  fontFamily: \"Open Sans\",\r\n                  color: \"thistheme.text\",\r\n                }}\r\n              >\r\n              \r\n                {/* Basic Qualification and Certifcations */}\r\n              </Text>\r\n              <CompetitiveSites logos={competitiveSites.competitiveSites} />\r\n\r\n            </Box>\r\n          </GridItem>\r\n        </Grid>\r\n      </Reveal>\r\n      <Reveal duration={2000} keyframes={Upwards}>\r\n        <Heading sx={{ color: appTheme.text }}>\r\n          Degrees Received\r\n        </Heading>\r\n      </Reveal>\r\n\r\n      <Degree {...degrees?.degree[0]} />\r\n      {/* <Degree {...degrees?.degree[1]} /> */}\r\n\r\n      {/* <Spacer /> */}\r\n      {\r\n        certifications.isShow &&\r\n        <Heading color={\"thistheme.text\"} mt={{ base: \"100px\", sm: \"100px\" }}>\r\n          Certifications\r\n        </Heading>\r\n      }\r\n\r\n      <Flex\r\n        flexWrap={\"wrap\"}\r\n        gap={\"20px\"}\r\n        mt={{ base: \"30px\", sm: \"30px\" }}\r\n        w={{\r\n          base: \"100%\",\r\n          sm: \"90%\",\r\n          md: \"800px\",\r\n          lg: \"1000px\",\r\n          xl: \"1100px\",\r\n          \"2xl\": \"1300px\",\r\n        }}\r\n        // border={\"1px\"}\r\n        m={\"auto\"}\r\n        height={\"fit-content\"}\r\n\r\n      >\r\n        {certifications.isShow && certifications.certifications.map((item, i) => {\r\n\r\n          return <Certificate key={i} {...item} />;\r\n        })}\r\n      </Flex>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface SpacerProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * A flexible flex spacer that expands along the major axis of its containing flex layout.\n * It renders a `div` by default, and takes up any available space.\n *\n * @see Docs https://chakra-ui.com/flex#using-the-spacer\n */\nexport const Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\",\n  },\n})\n\nSpacer.displayName = \"Spacer\"\n"],"names":["Certificate","title","subtitle","logo_path","certificate_link","alt_name","color_code","_jsxs","Flex","onClick","window","open","flexWrap","mt","base","sm","w","height","boxShadow","m","flexDir","children","_jsx","Box","bg","Image","h","src","alignItems","justifyContent","Text","fontSize","sx","fontFamily","fontWeight","color","RightWard","keyframes","Degree","duration","descriptions","website_link","_Fragment","HStack","md","lg","xl","p","gap","display","flexDirection","width","Flip","borderRadius","border","Reveal","VStack","overflow","Grid","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","GridItem","area","textAlign","map","item","i","Spacer","Button","alignSelf","size","Link","forwardRef","props","ref","styles","useStyleConfig","className","isExternal","rest","omitThemingProps","jsx","chakra","a","target","rel","cx","__css","displayName","CompetitiveSites","logos","Stack","logo","Tooltip","label","siteName","placement","href","profileLink","Img","margin","alt","iconifyClassname","cursor","Upwards","Education","id","pt","competitiveSites","Heading","appTheme","text","degrees","degree","certifications","isShow","align","direction","baseStyle","flex","justifySelf"],"sourceRoot":""}